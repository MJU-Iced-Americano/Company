plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'

	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.mju'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
}

ext {
	set('springCloudVersion', "2022.0.2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Jasypt: DB 암호화
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

	testImplementation('org.junit.jupiter:junit-jupiter:5.9.2')

	// s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// aws-sdk-java-v2 (s3에 Multipart 업로드를 위함)
	implementation platform('software.amazon.awssdk:bom:2.17.53')
	implementation 'software.amazon.awssdk:s3'

	// Swagger 3
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

	// Thymeleaf
	implementation 'org.thymeleaf:thymeleaf:3.0.5.RELEASE'
	implementation 'org.thymeleaf:thymeleaf-spring3:3.0.5.RELEASE'

	// ⭐ Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// validation
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.6'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.6.3'

	// 다중 파일 처리
	implementation 'commons-io:commons-io:2.6'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

//querydsl
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
